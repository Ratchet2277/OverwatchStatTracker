@model DomainModel.Game
<div id="add-game">

    @using (Html.BeginForm(controllerName: "Game", actionName: Model.Id != 0 ? "SaveEdit" : "Create"))
    {
        @if (Model.Id != 0)
        {
            @Html.HiddenFor(g => g.Id)
        }
        <h4>Ajouter une game</h4>
        <div class="input-field col s12 m6">
            <select name="NewMap" id="Map">
                @if (Model.Id > 0)
                {
                    <option v-for="map in maps" v-bind:value="map.id" :selected="map.id == @Model.Map?.Id">{{ map.name }}</option>
                }
                else
                {
                    <option v-for="map in maps" v-bind:value="map.id">{{ map.name }}</option>
                }
            </select>
            @Html.LabelFor(g => g.Map)
        </div>

        <div class="input-field col s12 m6">
            <select name="Type" id="Type"
                    v-model="selectedRole"
                    v-on:change="updateHeroList">
                @if (Model.Id > 0)
                {
                    <option v-for="(role, id) in roles" v-bind:value="id" :selected="id == @((int) Model.Type)">{{ role }}</option>
                }
                else
                {
                    <option v-for="(role, id) in roles" v-bind:value="id">{{ role }}</option>
                }
            </select>
            @Html.LabelFor(g => g.Type)
        </div>

        <div class="input-field col s12 m6">
            <select name="NewHeroes" id="Heroes" multiple>
                @if (Model.Id > 0)
                {
                    <option v-for="hero in heroes" v-bind:value="hero.id" v-bind:data-icon="hero.imageUrl" class="right" :selected="@(Json.Serialize(Model.Heroes.Select(h => h.Id).ToArray())).includes(hero.id)">{{ hero.name }}</option>
                }
                else
                {
                    <option v-for="hero in heroes" v-bind:value="hero.id" v-bind:data-icon="hero.imageUrl" class="right">{{ hero.name }}</option>
                }
            </select>
            @Html.LabelFor(g => g.Heroes)
        </div>
        <div class="input-field col s12 m6">
            @Html.TextBoxFor(g => g.Sr, new {type = "number", min = 0, max = 5000})
            @Html.LabelFor(g => g.Sr)
        </div>

        <div class="input-field col s12">
            @Html.LabelFor(g => g.SquadMembers)
            <select name="NewSquadMembers" id="SquadMembers"
                    class="select2 browser-default"
                    data-tags="true"
                    multiple
                    data-width="100%"
                    data-ajax--url="/SquadMember/Search">
                @foreach (var squadMember in Model.SquadMembers)
                {
                    <option selected value="@squadMember.Name">@squadMember.Name</option>
                }
            </select>
        </div>
        <div class="input-field col s12 m6">
            @Html.TextBoxFor(g => g.AllieScore, new {type = "number", min = 0})
            @Html.LabelFor(g => g.AllieScore)
        </div>
        <div class="input-field col s12 m6">
            @Html.TextBoxFor(g => g.EnemyScore, new {type = "number", min = 0})
            @Html.LabelFor(g => g.EnemyScore)
        </div>
        <div class="col s12 center">
            <button class="btn wave-effect">Save</button>
        </div>
    }
</div>